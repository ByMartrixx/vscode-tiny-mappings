{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "Enigma Mappings",
	"patterns": [
		{
			"include": "#keywords"
		},
		{
			"include": "#comments"
		},
		{
			"include": "#class"
		},
		{
			"include": "#field"
		},
		{
			"include": "#method"
		},
		{
			"include": "#arg"
		},
		{
			"include": "#descriptors"
		},
		{
			"include": "#brackets"
		}
	],
	"repository": {
		"keywords": {
			"match": "(?<=^\t*)(COMMENT|CLASS|FIELD|METHOD|ARG)",
			"name": "keyword.other.enigma-mapping"
		},
		"comments": {
			"match": "(?<!COMMENT.*)((#).*)$",
			"captures": {
				"1": {
					"name": "comment.line.number-sign.enigma-mapping"
				},
				"2": {
					"name": "punctuation.definition.comment.enigma-mapping"
				}
			}
		},
		"class": {
			"match": "(?<=CLASS\\s+(?:[^\\s]+\\s+)?)[A-z_$][^\\s]*",
			"name": "entity.name.class.enigma-mapping"
		},
		"field": {
			"patterns": [
				{
					"match": "(?<=FIELD\\s+)[A-z_$][^\\s]*",
					"name": "variable.name.enigma-mapping"
				},
				{
					"match": "(?<=FIELD\\s+.*[^\\S\r\n]+)[A-z_$][^\\s]*(?![\\S\r\n])",
					"name": "variable.name.enigma-mapping"
				}
			]
		},
		"method": {
			"patterns": [
				{
					"match": "(?<=METHOD\\s+(?:[^\\s]+\\s+)?)[A-z_$][^\\s]*",
					"name": "entity.name.function.enigma-mapping"
				},
				{
					"match": "(?<=METHOD\\s+)<init>",
					"name": "entity.name.function.constructor.enigma-mapping"
				}
			]
		},
		"arg": {
			"match": "(?<=ARG\\s+\\d+\\s+)[A-z_$][^\\s]*",
			"name": "variable.parameter.enigma-mapping"
		},
		"descriptors": {
			"patterns": [
				{
					"include": "#field-descriptors"
				},
				{
					"include": "#method-descriptors"
				}
			]
		},
		"field-descriptors": {
			"patterns": [
				{
					"match": "(?<=FIELD\\s+(?:[^\\s]+\\s+){1,2}\\[*)(B|C|D|F|I|J|S|Z)$",
					"name": "storage.type.descriptor.enigma-mapping"
				},
				{
					"match": "(?<=FIELD\\s+(?:[^\\s]+\\s+){1,2})\\[+",
					"name": "storage.modifier.array.descriptor.enigma-mapping"
				},
				{
					"begin": "(?<=FIELD\\s+(?:[^\\s]+\\s+){1,2}\\[*)L",
					"end": "(;)$",
					"beginCaptures": {
						"0": {
							"name": "storage.type.descriptor.enigma-mapping"
						}
					},
					"endCaptures": {
						"1": {
							"name": "punctuation.terminator.semi-colon.enigma-mapping"
						}
					},
					"patterns": [{
						"match": "[A-z_$][^\\s;]*",
						"name": "entity.name.class.reference.enigma-mapping"
					}]
				}
			]
		},
		"method-descriptors": {
			"patterns": [
				{
					"include": "#method-parameter-descriptors"
				},
				{
					"include": "#method-return-descriptors"
				}
			]
		},
		"method-parameter-descriptors": {
			"patterns": [
				{
					"match": "(?<=METHOD\\s+(?:[^\\s]*\\s+){1,2}\\([^\\s)]*)(B|C|D|F|I|J|S|Z)",
					"name": "storage.type.descriptor.enigma-mapping"
				},
				{
					"match": "(?<=METHOD\\s+(?:[^\\s]*\\s+){1,2}\\([^\\s)]*)\\[(?![\\s)])",
					"name": "storage.modifier.array.descriptor.enigma-mapping"
				},
				{
					"begin": "(?<=METHOD\\s+(?:[^\\s]*\\s+){1,2}\\([^\\s)]*)L",
					"end": ";",
					"beginCaptures": {
						"0": {
							"name": "storage.type.descriptor.enigma-mapping"
						}
					},
					"endCaptures": {
						"0": {
							"name": "punctuation.terminator.semi-colon.enigma-mapping"
						}
					},
					"patterns": [{
						"match": "[A-z_$][^\\s]*",
						"name": "entity.name.class.reference.enigma-mapping"
					}]
				}
			]
		},
		"method-return-descriptors": {
			"patterns": [
				{
					"match": "(?<=METHOD\\s+(?:[^\\s]*\\s+){1,2}\\([^\\s)]*\\)\\[*)(B|C|D|F|I|J|S|Z|V)",
					"name": "storage.type.descriptor.enigma-mapping"
				},
				{
					"match": "(?<=METHOD\\s+(?:[^\\s]*\\s+){1,2}\\([^\\s)]*\\))\\[+(?![\\s)])",
					"name": "storage.modifier.array.descriptor.enigma-mapping"
				},
				{
					"begin": "(?<=METHOD\\s+(?:[^\\s]*\\s+){1,2}\\([^\\s)]*\\)\\[*)L",
					"end": "(;)$",
					"beginCaptures": {
						"0": {
							"name": "storage.type.descriptor.enigma-mapping"
						}
					},
					"endCaptures": {
						"1": {
							"name": "punctuation.terminator.semi-colon.enigma-mapping"
						}
					},
					"patterns": [{
						"match": "[A-z_$][^\\s;]*",
						"name": "entity.name.class.reference.enigma-mapping"
					}]
				}
			]
		},
		"brackets": {
			"match": "\\(|\\)",
			"name": "punctuation.bracket.round.enigma-mapping"
		}
	},
	"scopeName": "text.enigma-mapping"
}